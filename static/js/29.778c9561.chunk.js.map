{"version":3,"sources":["views/Dashboard/Dashboard.js"],"names":["cookies","Cookies","Dashboard","props","_this","Object","E_Projects_ChatbotAdmin_FrontEnd_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","E_Projects_ChatbotAdmin_FrontEnd_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_Projects_ChatbotAdmin_FrontEnd_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","loading","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","toggle","bind","E_Projects_ChatbotAdmin_FrontEnd_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","onRadioBtnClick","state","dropdownOpen","radioSelected","isLoggedIn","setState","undefined","get","src","alt","Component"],"mappings":"4KAGMA,EAAU,WAAIC,GAEdC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAgCRQ,QAAU,kBAAMC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCAAf,eA9BdX,EAAKY,OAASZ,EAAKY,OAAOC,KAAZZ,OAAAa,EAAA,EAAAb,CAAAD,IACdA,EAAKe,gBAAkBf,EAAKe,gBAAgBF,KAArBZ,OAAAa,EAAA,EAAAb,CAAAD,IAEvBA,EAAKgB,MAAQ,CACXC,cAAc,EACdC,cAAe,EACfC,YAAY,GATGnB,wEAcfG,KAAKiB,SAAS,CACZH,cAAed,KAAKa,MAAMC,uDAIhBC,GACZf,KAAKiB,SAAS,CACZF,cAAeA,sDAKSG,IAAzBzB,EAAQ0B,IAAI,UAAmD,OAAzB1B,EAAQ0B,IAAI,UACnDnB,KAAKiB,SAAS,CACZD,YAAY,qCASd,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKa,IAAK,6BAA8BZ,UAAU,aAAaa,IAAI,sCAxCrDC,aAiDT3B","file":"static/js/29.778c9561.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2,\r\n      isLoggedIn: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n      this.setState({\r\n        dropdownOpen: !this.state.dropdownOpen,\r\n      });\r\n  }\r\n\r\n  onRadioBtnClick(radioSelected) {\r\n      this.setState({\r\n        radioSelected: radioSelected,\r\n      });\r\n  }\r\n\r\n  componentWillMount(){\r\n    if(cookies.get('token') !== undefined && cookies.get('token') !== null){\r\n      this.setState({\r\n        isLoggedIn: true\r\n      });\r\n    }\r\n  }\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n    // if(this.state.isLoggedIn){\r\n      return (\r\n        <div className=\"animated fadeIn\">\r\n          <img src={'assets/img/background.jpeg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\r\n        </div>\r\n      );\r\n    // } else {\r\n    //   return <Redirect to='/login'/>\r\n    // }\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}